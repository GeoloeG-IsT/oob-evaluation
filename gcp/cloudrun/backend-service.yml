# Cloud Run Service Configuration for Backend API
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: ml-eval-backend-production
  annotations:
    # Cloud Run specific annotations
    run.googleapis.com/ingress: all
    run.googleapis.com/execution-environment: gen2
    run.googleapis.com/cpu-throttling: "false"
    # Autoscaling
    autoscaling.knative.dev/minScale: "1"
    autoscaling.knative.dev/maxScale: "50"
    # Networking
    run.googleapis.com/network-interfaces: '[{"network":"ml-eval-vpc","subnetwork":"ml-eval-subnet"}]'
    # VPC Connector (if using private VPC)
    run.googleapis.com/vpc-access-connector: projects/PROJECT_ID/locations/us-central1/connectors/ml-eval-connector
    run.googleapis.com/vpc-access-egress: private-ranges-only
spec:
  template:
    metadata:
      annotations:
        # Resource limits
        run.googleapis.com/memory: "8Gi"
        run.googleapis.com/cpu: "4"
        # Startup and request timeouts
        run.googleapis.com/timeout: "900s"
        run.googleapis.com/startup-cpu-boost: "true"
        # Service account
        run.googleapis.com/service-account: ml-eval-service@PROJECT_ID.iam.gserviceaccount.com
        # Scaling
        autoscaling.knative.dev/maxScale: "50"
        autoscaling.knative.dev/minScale: "1"
        # Concurrency
        run.googleapis.com/execution-environment: gen2
    spec:
      containerConcurrency: 80
      timeoutSeconds: 900
      serviceAccountName: ml-eval-service@PROJECT_ID.iam.gserviceaccount.com
      containers:
      - name: ml-eval-backend
        image: gcr.io/PROJECT_ID/ml-eval-backend:latest
        ports:
        - name: http1
          containerPort: 8080
        env:
        # Core application settings
        - name: ENVIRONMENT
          value: "production"
        - name: PORT
          value: "8080"
        - name: HOST
          value: "0.0.0.0"
        - name: WORKERS
          value: "4"
        
        # URLs
        - name: BACKEND_URL
          value: "https://ml-eval-backend-production-PROJECT_HASH.a.run.app"
        - name: FRONTEND_URL
          value: "https://ml-eval-frontend-production-PROJECT_HASH.a.run.app"
        
        # GCP Configuration
        - name: USE_SECRET_MANAGER
          value: "true"
        - name: GCP_PROJECT_ID
          value: "PROJECT_ID"
        - name: GCP_REGION
          value: "us-central1"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/var/secrets/google/key.json"
        
        # Database (from Secret Manager)
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: ml-eval-database-url
              key: latest
        
        # Redis (from Secret Manager)
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: ml-eval-redis-url
              key: latest
        
        # Security (from Secret Manager)
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: ml-eval-secret-key
              key: latest
        
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: ml-eval-jwt-secret
              key: latest
        
        # Storage
        - name: USE_GCS
          value: "true"
        - name: GCS_BUCKET_NAME
          value: "ml-eval-platform-prod-storage"
        - name: GCS_PROJECT_ID
          value: "PROJECT_ID"
        
        # Feature flags
        - name: ENABLE_TRAINING
          value: "true"
        - name: ENABLE_INFERENCE
          value: "true"
        - name: ENABLE_EVALUATION
          value: "true"
        - name: ENABLE_DEPLOYMENT
          value: "true"
        - name: ENABLE_MONITORING
          value: "true"
        
        # Logging
        - name: LOG_LEVEL
          value: "INFO"
        - name: STRUCTURED_LOGGING
          value: "true"
        
        # ML Settings
        - name: USE_GPU
          value: "true"
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        
        # Performance settings
        - name: REQUEST_TIMEOUT
          value: "600"
        - name: MAX_REQUEST_SIZE
          value: "209715200"  # 200MB
        
        resources:
          limits:
            memory: "8Gi"
            cpu: "4000m"
          requests:
            memory: "4Gi"
            cpu: "2000m"
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        # Startup probe for slower startup
        startupProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 30
        
        # Volume mounts for secrets
        volumeMounts:
        - name: google-cloud-key
          mountPath: /var/secrets/google
          readOnly: true
        
        # Security context
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      
      # Volumes
      volumes:
      - name: google-cloud-key
        secret:
          secretName: ml-eval-gcp-credentials
  
  traffic:
  - percent: 100
    latestRevision: true