apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: ml-eval-celery-inference
  namespace: default
  annotations:
    run.googleapis.com/ingress: none
    run.googleapis.com/execution-environment: gen2
    run.googleapis.com/cpu-throttling: "false"
  labels:
    app: ml-eval-platform
    component: celery-inference
    env: production
spec:
  template:
    metadata:
      annotations:
        # Medium resource allocation for inference
        run.googleapis.com/cpu: "2"
        run.googleapis.com/memory: "4Gi"
        run.googleapis.com/max-instances: "5"
        run.googleapis.com/min-instances: "1"
        
        # GPU support for inference
        run.googleapis.com/gpu: "1"
        run.googleapis.com/gpu-type: "nvidia-t4"
        
        # Performance optimizations
        run.googleapis.com/startup-cpu-boost: "true"
        run.googleapis.com/execution-environment: "gen2"
        
        # VPC and database connectivity
        run.googleapis.com/cloudsql-instances: "PROJECT_ID:REGION:ml-eval-db"
        run.googleapis.com/vpc-access-connector: "projects/PROJECT_ID/locations/REGION/connectors/ml-eval-connector"
        run.googleapis.com/vpc-access-egress: "private-ranges-only"
        
        # Inference timeout
        run.googleapis.com/timeout: "1800s"
      labels:
        app: ml-eval-platform
        component: celery-inference
        env: production
    spec:
      containerConcurrency: 2  # Multiple inference tasks
      timeoutSeconds: 1800     # 30 minutes for batch inference
      serviceAccountName: ml-eval-celery-sa@PROJECT_ID.iam.gserviceaccount.com
      
      containers:
      - name: celery-inference
        image: gcr.io/PROJECT_ID/ml-eval-celery:TAG
        command: ["celery"]
        args: ["-A", "src.celery_app", "worker", "--loglevel=info", "--queue=inference", "--concurrency=2", "--max-tasks-per-child=5"]
        
        # Resource allocation for inference
        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        
        # Health checks
        startupProbe:
          exec:
            command: ["celery", "-A", "src.celery_app", "inspect", "ping"]
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 6
        
        livenessProbe:
          exec:
            command: ["celery", "-A", "src.celery_app", "inspect", "ping"]
          initialDelaySeconds: 30
          periodSeconds: 45
          timeoutSeconds: 20
          failureThreshold: 3
        
        # Environment variables
        env:
        - name: ENV
          value: "production"
        - name: CELERY_WORKER_TYPE
          value: "inference"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: ml-eval-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: ml-eval-secrets
              key: redis-url
        - name: GOOGLE_CLOUD_PROJECT
          value: "PROJECT_ID"
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: PYTHONDONTWRITEBYTECODE
          value: "1"
        - name: C_FORCE_ROOT
          value: "0"
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        
        # Volume mounts
        volumeMounts:
        - name: gcs-fuse
          mountPath: /app/data
          readOnly: false
      
      volumes:
      - name: gcs-fuse
        csi:
          driver: gcsfuse.csi.storage.gke.io
          readOnly: false
          volumeAttributes:
            bucketName: "ml-eval-storage-PROJECT_ID"
            mountOptions: "implicit-dirs"
  
  traffic:
  - percent: 100
    latestRevision: true